syntax = "proto3";

package v2.service;

import "google/api/annotations.proto";
import "proto/service/message/widget.proto";
import "proto/service/message/admin.proto";
import "proto/service/message/post.proto";

option go_package = "github.com/dtc03012/me/protobuf/proto/service";


service me {

  /////////////////////
  // Admin Service

  rpc FindAdminUUID(service.message.FindAdminUUIDRequest) returns (service.message.FindAdminUUIDResponse) {
    option (google.api.http) = {
      post: "/v2/find-admin-uuid"
      body: "*"
    };
  }

  rpc InsertAdminUUID(service.message.InsertAdminUUIDRequest) returns (service.message.InsertAdminUUIDResponse) {
    option (google.api.http) = {
      post: "/v2/insert-admin-uuid"
      body: "*"
    };
  }

  rpc LoginAdmin(service.message.LoginAdminRequest) returns (service.message.LoginAdminResponse) {
    option (google.api.http) = {
      post: "/v2/login-admin"
      body: "*"
    };
  }

  /////////////////////
  // Widget Service

  rpc FetchDistrictWeather(service.message.FetchDistrictWeatherRequest) returns (service.message.FetchDistrictWeatherResponse) {
    option (google.api.http) = {
      get: "/v2/fetch-district-weather/{nx}/{ny}"
    };
  }

  /////////////////////
  // Post Service

  rpc UploadPost(service.message.UploadPostRequest) returns (service.message.UploadPostResponse) {
    option (google.api.http) = {
      post: "/v2/upload-board-post"
      body: "*"
    };
  }

  rpc FetchPostList(service.message.FetchPostListRequest) returns (service.message.FetchPostListResponse) {
    option (google.api.http) = {
      get: "/v2/fetch-board-post-list"
    };
  }

  rpc FetchPost(service.message.FetchPostRequest) returns (service.message.FetchPostResponse) {
    option (google.api.http) = {
      get: "/v2/fetch-board-post"
    };
  }

  rpc IncrementView(service.message.IncrementViewRequest) returns (service.message.IncrementViewResponse) {
    option (google.api.http) = {
      put: "/v2/increment-board-view"
    };
  }

  rpc LeaveComment(service.message.LeaveCommentRequest) returns (service.message.LeaveCommentResponse) {
    option (google.api.http) = {
      post: "/v2/leave-board-comment"
      body: "*"
    };
  }

  rpc FetchCommentList(service.message.FetchCommentListRequest) returns (service.message.FetchCommentListResponse) {
    option (google.api.http) = {
      get: "/v2/fetch-board-comment-list"
    };
  }

  rpc DeleteComment(service.message.DeleteCommentRequest) returns (service.message.DeleteCommentResponse) {
    option (google.api.http) = {
      delete: "/v2/delete-board-comment"
    };
  }

  rpc IncrementLikeCnt(service.message.IncrementLikeCntRequest) returns (service.message.IncrementLikeCntResponse) {
    option (google.api.http) = {
      put: "/v2/increment-board-like-cnt"
    };
  }

  rpc DecrementLikeCnt(service.message.DecrementLikeCntRequest) returns (service.message.DecrementLikeCntResponse) {
    option (google.api.http) = {
      put: "/v2/decrement-board-like-cnt"
    };
  }
}