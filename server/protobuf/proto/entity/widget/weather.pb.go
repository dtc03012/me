// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: proto/entity/widget/weather.proto

package widget

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SkyCondition int32

const (
	Sky_NONE     SkyCondition = 0
	Sky_SUNNY    SkyCondition = 1
	Sky_CLOUDY   SkyCondition = 2
	Sky_OVERCAST SkyCondition = 3
)

// Enum value maps for SkyCondition.
var (
	SkyCondition_name = map[int32]string{
		0: "NONE",
		1: "SUNNY",
		2: "CLOUDY",
		3: "OVERCAST",
	}
	SkyCondition_value = map[string]int32{
		"NONE":     0,
		"SUNNY":    1,
		"CLOUDY":   2,
		"OVERCAST": 3,
	}
)

func (x SkyCondition) Enum() *SkyCondition {
	p := new(SkyCondition)
	*p = x
	return p
}

func (x SkyCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkyCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_entity_widget_weather_proto_enumTypes[0].Descriptor()
}

func (SkyCondition) Type() protoreflect.EnumType {
	return &file_proto_entity_widget_weather_proto_enumTypes[0]
}

func (x SkyCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkyCondition.Descriptor instead.
func (SkyCondition) EnumDescriptor() ([]byte, []int) {
	return file_proto_entity_widget_weather_proto_rawDescGZIP(), []int{1, 0}
}

type PrecipitationCondition int32

const (
	Precipitation_NONE       PrecipitationCondition = 0
	Precipitation_RAINY      PrecipitationCondition = 1
	Precipitation_RAINY_SNOW PrecipitationCondition = 2
	Precipitation_SNOW       PrecipitationCondition = 3
	Precipitation_SHOWER     PrecipitationCondition = 4
)

// Enum value maps for PrecipitationCondition.
var (
	PrecipitationCondition_name = map[int32]string{
		0: "NONE",
		1: "RAINY",
		2: "RAINY_SNOW",
		3: "SNOW",
		4: "SHOWER",
	}
	PrecipitationCondition_value = map[string]int32{
		"NONE":       0,
		"RAINY":      1,
		"RAINY_SNOW": 2,
		"SNOW":       3,
		"SHOWER":     4,
	}
)

func (x PrecipitationCondition) Enum() *PrecipitationCondition {
	p := new(PrecipitationCondition)
	*p = x
	return p
}

func (x PrecipitationCondition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrecipitationCondition) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_entity_widget_weather_proto_enumTypes[1].Descriptor()
}

func (PrecipitationCondition) Type() protoreflect.EnumType {
	return &file_proto_entity_widget_weather_proto_enumTypes[1]
}

func (x PrecipitationCondition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrecipitationCondition.Descriptor instead.
func (PrecipitationCondition) EnumDescriptor() ([]byte, []int) {
	return file_proto_entity_widget_weather_proto_rawDescGZIP(), []int{2, 0}
}

type Temperature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Now     string `protobuf:"bytes,1,opt,name=now,proto3" json:"now,omitempty"`
	Highest string `protobuf:"bytes,2,opt,name=highest,proto3" json:"highest,omitempty"`
	Lowest  string `protobuf:"bytes,3,opt,name=lowest,proto3" json:"lowest,omitempty"`
}

func (x *Temperature) Reset() {
	*x = Temperature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_entity_widget_weather_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Temperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temperature) ProtoMessage() {}

func (x *Temperature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_entity_widget_weather_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temperature.ProtoReflect.Descriptor instead.
func (*Temperature) Descriptor() ([]byte, []int) {
	return file_proto_entity_widget_weather_proto_rawDescGZIP(), []int{0}
}

func (x *Temperature) GetNow() string {
	if x != nil {
		return x.Now
	}
	return ""
}

func (x *Temperature) GetHighest() string {
	if x != nil {
		return x.Highest
	}
	return ""
}

func (x *Temperature) GetLowest() string {
	if x != nil {
		return x.Lowest
	}
	return ""
}

type Sky struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkyCondition SkyCondition           `protobuf:"varint,1,opt,name=sky_condition,json=skyCondition,proto3,enum=v2.entity.widget.SkyCondition" json:"sky_condition,omitempty"`
	ForecastTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=forecast_time,json=forecastTime,proto3" json:"forecast_time,omitempty"`
}

func (x *Sky) Reset() {
	*x = Sky{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_entity_widget_weather_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sky) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sky) ProtoMessage() {}

func (x *Sky) ProtoReflect() protoreflect.Message {
	mi := &file_proto_entity_widget_weather_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sky.ProtoReflect.Descriptor instead.
func (*Sky) Descriptor() ([]byte, []int) {
	return file_proto_entity_widget_weather_proto_rawDescGZIP(), []int{1}
}

func (x *Sky) GetSkyCondition() SkyCondition {
	if x != nil {
		return x.SkyCondition
	}
	return Sky_NONE
}

func (x *Sky) GetForecastTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ForecastTime
	}
	return nil
}

type Precipitation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrecipitationCondition PrecipitationCondition `protobuf:"varint,1,opt,name=precipitation_condition,json=precipitationCondition,proto3,enum=v2.entity.widget.PrecipitationCondition" json:"precipitation_condition,omitempty"`
	ForecastTime           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=forecast_time,json=forecastTime,proto3" json:"forecast_time,omitempty"`
}

func (x *Precipitation) Reset() {
	*x = Precipitation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_entity_widget_weather_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Precipitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Precipitation) ProtoMessage() {}

func (x *Precipitation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_entity_widget_weather_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Precipitation.ProtoReflect.Descriptor instead.
func (*Precipitation) Descriptor() ([]byte, []int) {
	return file_proto_entity_widget_weather_proto_rawDescGZIP(), []int{2}
}

func (x *Precipitation) GetPrecipitationCondition() PrecipitationCondition {
	if x != nil {
		return x.PrecipitationCondition
	}
	return Precipitation_NONE
}

func (x *Precipitation) GetForecastTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ForecastTime
	}
	return nil
}

var File_proto_entity_widget_weather_proto protoreflect.FileDescriptor

var file_proto_entity_widget_weather_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x2f, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x76, 0x32, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x77,
	0x69, 0x64, 0x67, 0x65, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x69, 0x67, 0x68, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x03, 0x73, 0x6b,
	0x79, 0x12, 0x44, 0x0a, 0x0d, 0x73, 0x6b, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x76, 0x32, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x73, 0x6b, 0x79, 0x2e,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x6b, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x65, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x66, 0x6f, 0x72, 0x65,
	0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x55, 0x4e, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c,
	0x4f, 0x55, 0x44, 0x59, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x56, 0x45, 0x52, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x03, 0x22, 0xfc, 0x01, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x17, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x76, 0x32, 0x2e, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x16, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x66,
	0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x49, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x41, 0x49, 0x4e, 0x59, 0x5f, 0x53, 0x4e, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x4e, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x48, 0x4f, 0x57, 0x45,
	0x52, 0x10, 0x04, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x74, 0x63, 0x30, 0x33, 0x30, 0x31, 0x32, 0x2f, 0x6d, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2f, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_entity_widget_weather_proto_rawDescOnce sync.Once
	file_proto_entity_widget_weather_proto_rawDescData = file_proto_entity_widget_weather_proto_rawDesc
)

func file_proto_entity_widget_weather_proto_rawDescGZIP() []byte {
	file_proto_entity_widget_weather_proto_rawDescOnce.Do(func() {
		file_proto_entity_widget_weather_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_entity_widget_weather_proto_rawDescData)
	})
	return file_proto_entity_widget_weather_proto_rawDescData
}

var file_proto_entity_widget_weather_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_entity_widget_weather_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_entity_widget_weather_proto_goTypes = []interface{}{
	(SkyCondition)(0),             // 0: v2.entity.widget.sky.condition
	(PrecipitationCondition)(0),   // 1: v2.entity.widget.precipitation.condition
	(*Temperature)(nil),           // 2: v2.entity.widget.temperature
	(*Sky)(nil),                   // 3: v2.entity.widget.sky
	(*Precipitation)(nil),         // 4: v2.entity.widget.precipitation
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_proto_entity_widget_weather_proto_depIdxs = []int32{
	0, // 0: v2.entity.widget.sky.sky_condition:type_name -> v2.entity.widget.sky.condition
	5, // 1: v2.entity.widget.sky.forecast_time:type_name -> google.protobuf.Timestamp
	1, // 2: v2.entity.widget.precipitation.precipitation_condition:type_name -> v2.entity.widget.precipitation.condition
	5, // 3: v2.entity.widget.precipitation.forecast_time:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_entity_widget_weather_proto_init() }
func file_proto_entity_widget_weather_proto_init() {
	if File_proto_entity_widget_weather_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_entity_widget_weather_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Temperature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_entity_widget_weather_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sky); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_entity_widget_weather_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Precipitation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_entity_widget_weather_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_entity_widget_weather_proto_goTypes,
		DependencyIndexes: file_proto_entity_widget_weather_proto_depIdxs,
		EnumInfos:         file_proto_entity_widget_weather_proto_enumTypes,
		MessageInfos:      file_proto_entity_widget_weather_proto_msgTypes,
	}.Build()
	File_proto_entity_widget_weather_proto = out.File
	file_proto_entity_widget_weather_proto_rawDesc = nil
	file_proto_entity_widget_weather_proto_goTypes = nil
	file_proto_entity_widget_weather_proto_depIdxs = nil
}
